openapi: 3.0.0
info:
  title: Hollywood Network Visualizer API doc
  version: 0.1.0
servers:
- url: /api
tags:
  - name: graph
    description: Routes returning graphs (nodes and edges)
  - name: actors
    description: Actors routes
  - name: movies
    description: Movies routes
paths:
  /graph/actors:
    get:
      tags:
        - graph
        - actors
      summary: actors graph
      description: Returns actors (and some "actors friends") from the best films according to their revenue
      parameters:
        - name: limitMovie
          in: query
          description: Optional, max 20 (actually)
          required: false
          schema:
            type: integer
            default: 5
        - name: limitActor
          in: query
          description: Optional, max 20 (actually)
          required: false
          schema:
            type: integer
            default: 3
        - name: limitActorFriends
          in: query
          description: Optional, max 10 (actually)
          required: false
          schema:
            type: integer
            default: 1
        - name: movieStartDate
          in: query
          description: Optional, format "YYYY-MM-DD"
          required: false
          schema:
            type: string
            example: "2005-06-13"
        - name: movieEndDate
          in: query
          description: Optional, format "YYYY-MM-DD"
          required: false
          schema:
            type: string
            example: "2010-07-14"
        - name: movieMinBudget
          in: query
          description: Optional, in US dollars
          required: false
          schema:
            type: integer
            example: 1000
        - name: movieMaxBudget
          in: query
          description: Optional, in US dollars
          required: false
          schema:
            type: integer
            example: 999999
        - name: movieMinRevenue
          in: query
          description: Optional, in US dollars
          required: false
          schema:
            type: integer
            example: 10000000
        - name: movieMaxRevenue
          in: query
          description: Optional, in US dollars
          required: false
          schema:
            type: integer
            example: 1000000000
        - name: movieMinRuntime
          in: query
          description: Optional, in minutes
          required: false
          schema:
            type: integer
            example: 60
        - name: movieMaxRuntime
          in: query
          description: Optional, in minutes
          required: false
          schema:
            type: integer
            example: 160
        - name: movieGenres
          in: query
          description: Optional, list separated by comma
          required: false
          schema:
            type: string
            example: Action,Adventure
        - name: actorGender
          in: query
          description: Optional, Female or Male
          required: false
          schema:
            type: string
            enum:
              - Female
              - Male
            example: Female
        - name: actorStartBirth
          in: query
          description: Optional, format "YYYY-MM-DD"
          required: false
          schema:
            type: string
            example: "1970-01-01"
        - name: actorEndBirth
          in: query
          description: Optional, format "YYYY-MM-DD"
          required: false
          schema:
            type: string
            example: "2000-01-01"
        - name: actorStartDeath
          in: query
          description: Optional, format "YYYY-MM-DD"
          required: false
          schema:
            type: string
            example: "2000-01-01"
        - name: actorEndDeath
          in: query
          description: Optional, format "YYYY-MM-DD"
          required: false
          schema:
            type: string
            example: "2020-01-01"
      responses:
        '200':
          description: A list of actors nodes and their relations. Cytoscape.js format compatible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actors'
  /graph/friendsOf/{tmdbId}:
    get:
      tags:
        - graph
        - actors
      summary: actors and friends graph
      description: Returns actor, some "actors friends" and some "friends of friends" from given actor tmdbId
      parameters:
        - name: tmdbId
          in: path
          description: tmdbId
          required: true
          example: 3061
          schema:
            type: integer
            format: int64
        - name: friends
          in: query
          description: Optional, max 30 (actually)
          required: false
          schema:
            type: integer
            default: 10
        - name: limitfriendsOfFriendsActor
          in: query
          description: Optional, max 15 (actually)
          required: false
          schema:
            type: integer
            default: 5
      responses:
        '200':
          description: A list of actors nodes and their relations. Cytoscape.js format compatible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actors'
  /movie/{tmdbId}:
    get:
      tags:
        - movies
      summary: Single movie
      description: Return movie from given tmdbId with basic infos, credits and genres
      parameters:
        - name: tmdbId
          in: path
          description: tmdbId
          required: true
          example: 11
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A movie with basic infos, credits and genres
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: movie not found
  /movies:
    get:
      tags:
        - movies
      summary: Movies list
      description: Return movies list from given tmdbIds with basic infos, credits and genres
      parameters:
        - name: tmdbIds
          in: query
          description: TMDb ids, separated by comma
          required: true
          schema:
            type: string
            example: 10195,10138,24428
      responses:
        '200':
          description: Movies list with basic infos, credits and genres
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movie'
        '404':
          description: Not found
          content:
            text/plain:
              example: Request is missing required query parameter 'tmdbIds'

  /search:
    get:
      tags:
        - search
      summary: search results
      description: Returns actors and movies who match with a given string query
      parameters:
        - name: criteria
          in: query
          description: String to search
          required: true
          schema:
            type: string
            example: "jack"
        - name: limitActors
          in: query
          description: Limit of actors in search results
          required: true
          schema:
            type: integer
            default: 5
        - name: limitMovies
          in: query
          description: Limit of movies in search results
          required: true
          schema:
            type: integer
            default: 5
      responses:
        '200':
          description: A list of actors and movies that match with the given criteria field
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchResults'
components:
  schemas:
    KnowsRelation:
      type: object
      properties:
        movieIds:
          type: array
          items:
            type: integer
            format: int64
            description: TMDb movie id
        source:
          type: integer
          format: int64
          description: Actor id
        target:
          type: integer
          format: int64
          description: Actor id
    Actor:
      type: object
      properties:
        biography:
          type: string
        birthday:
          type: string
        deathday:
          type: string
        gender:
          type: string
        id:
          type: integer
          format: int64
        knowsCommunity:
          type: integer
          format: int64
        knowsDegree:
          type: integer
          format: int64
        name:
          type: string
        place_of_birth:
          type: string
        playInDegree:
          type: integer
          format: int64
        profile_path:
          type: string
        tmdbId:
          type: integer
          format: int64

    Genre:
      type: object
      properties:
        id:
          type: integer
          format: int64
        tmdbId:
          type: integer
          format: int64
        name:
          type: string
        belongsToDegree:
          type: integer
          format: int64
        knownForDegree:
          type: integer
          format: int64
        degree:
          type: integer
          format: int64

    PlayInMovie:
      type: object
      properties:
        id:
          type: integer
          format: int64
        character:
          type: string
        order:
          type: integer

    Credits:
      type: object
      properties:
        cast:
          type: array
          items:
            $ref: '#/components/schemas/PlayInMovie'

    ProductionCountries:
      type: object
      properties:
        iso_3166_1:
          type: string
        name:
          type: string

    Movie:
      type: object
      properties:
        id:
          type: integer
          format: int64
        tmdbId:
          type: integer
          format: int64
        title:
          type: string
        overview:
          type: string
        budget:
          type: integer
          format: int64
        revenue:
          type: integer
          format: int64
        genres:
          type: array
          items:
            $ref: '#/components/schemas/Genre'
        credits:
          $ref: '#/components/schemas/Credits'
        backdrop_path:
          type: string
        poster_path:
          type: string
        production_countries:
          type: array
          items:
            $ref: '#/components/schemas/ProductionCountries'
        release_date:
          type: string
        runtime:
          type: integer
        tagline:
          type: string

    Actors:
      type: object
      properties:
        edges:
          type: array
          items:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/KnowsRelation'
        nodes:
          type: array
          items:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Actor'

    SearchResults:
      type: object
      properties:
        tmdbId:
          type: integer
          format: int64
        name:
          type: string
        label:
          type: string
